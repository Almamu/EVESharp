#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EVESharp.ClusterControler.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="evesharp")]
	public partial class evesharpDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcharacter_(character_ instance);
    partial void Updatecharacter_(character_ instance);
    partial void Deletecharacter_(character_ instance);
    partial void Insertcacheinfo(cacheinfo instance);
    partial void Updatecacheinfo(cacheinfo instance);
    partial void Deletecacheinfo(cacheinfo instance);
    partial void Insertinvtype(invtype instance);
    partial void Updateinvtype(invtype instance);
    partial void Deleteinvtype(invtype instance);
    partial void Insertentity(entity instance);
    partial void Updateentity(entity instance);
    partial void Deleteentity(entity instance);
    partial void Insertsolarsystemsloaded(solarsystemsloaded instance);
    partial void Updatesolarsystemsloaded(solarsystemsloaded instance);
    partial void Deletesolarsystemsloaded(solarsystemsloaded instance);
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    #endregion
		
		public evesharpDataContext() : 
				base(global::EVESharp.ClusterControler.Properties.Settings.Default.evesharpConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public evesharpDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public evesharpDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public evesharpDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public evesharpDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<character_> character_s
		{
			get
			{
				return this.GetTable<character_>();
			}
		}
		
		public System.Data.Linq.Table<cacheinfo> cacheinfos
		{
			get
			{
				return this.GetTable<cacheinfo>();
			}
		}
		
		public System.Data.Linq.Table<invtype> invtypes
		{
			get
			{
				return this.GetTable<invtype>();
			}
		}
		
		public System.Data.Linq.Table<entity> entities
		{
			get
			{
				return this.GetTable<entity>();
			}
		}
		
		public System.Data.Linq.Table<solarsystemsloaded> solarsystemsloadeds
		{
			get
			{
				return this.GetTable<solarsystemsloaded>();
			}
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.character_")]
	public partial class character_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _characterID;
		
		private System.Nullable<long> _accountID;
		
		private string _title;
		
		private string _description;
		
		private double _bounty;
		
		private double _balance;
		
		private double _securityRating;
		
		private string _petitionMessage;
		
		private long _logonMinutes;
		
		private long _corporationID;
		
		private long _corpRole;
		
		private long _rolesAtAll;
		
		private long _rolesAtBase;
		
		private long _rolesAtHQ;
		
		private long _rolesAtOther;
		
		private long _corporationDateTime;
		
		private long _startDateTime;
		
		private long _createDateTime;
		
		private long _ancestryID;
		
		private long _careerID;
		
		private long _schoolID;
		
		private long _careerSpecialityID;
		
		private short _gender;
		
		private System.Nullable<long> _accessoryID;
		
		private System.Nullable<long> _beardID;
		
		private long _costumeID;
		
		private System.Nullable<long> _decoID;
		
		private long _eyebrowsID;
		
		private long _eyesID;
		
		private long _hairID;
		
		private System.Nullable<long> _lipstickID;
		
		private System.Nullable<long> _makeupID;
		
		private long _skinID;
		
		private long _backgroundID;
		
		private long _lightID;
		
		private double _headRotation1;
		
		private double _headRotation2;
		
		private double _headRotation3;
		
		private double _eyeRotation1;
		
		private double _eyeRotation2;
		
		private double _eyeRotation3;
		
		private double _camPos1;
		
		private double _camPos2;
		
		private double _camPos3;
		
		private System.Nullable<double> _morph1e;
		
		private System.Nullable<double> _morph1n;
		
		private System.Nullable<double> _morph1s;
		
		private System.Nullable<double> _morph1w;
		
		private System.Nullable<double> _morph2e;
		
		private System.Nullable<double> _morph2n;
		
		private System.Nullable<double> _morph2s;
		
		private System.Nullable<double> _morph2w;
		
		private System.Nullable<double> _morph3e;
		
		private System.Nullable<double> _morph3n;
		
		private System.Nullable<double> _morph3s;
		
		private System.Nullable<double> _morph3w;
		
		private System.Nullable<double> _morph4e;
		
		private System.Nullable<double> _morph4n;
		
		private System.Nullable<double> _morph4s;
		
		private System.Nullable<double> _morph4w;
		
		private long _stationID;
		
		private long _solarSystemID;
		
		private long _constellationID;
		
		private long _regionID;
		
		private short _online;
		
		private EntityRef<entity> _entity;
		
		private EntityRef<account> _account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncharacterIDChanging(long value);
    partial void OncharacterIDChanged();
    partial void OnaccountIDChanging(System.Nullable<long> value);
    partial void OnaccountIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnbountyChanging(double value);
    partial void OnbountyChanged();
    partial void OnbalanceChanging(double value);
    partial void OnbalanceChanged();
    partial void OnsecurityRatingChanging(double value);
    partial void OnsecurityRatingChanged();
    partial void OnpetitionMessageChanging(string value);
    partial void OnpetitionMessageChanged();
    partial void OnlogonMinutesChanging(long value);
    partial void OnlogonMinutesChanged();
    partial void OncorporationIDChanging(long value);
    partial void OncorporationIDChanged();
    partial void OncorpRoleChanging(long value);
    partial void OncorpRoleChanged();
    partial void OnrolesAtAllChanging(long value);
    partial void OnrolesAtAllChanged();
    partial void OnrolesAtBaseChanging(long value);
    partial void OnrolesAtBaseChanged();
    partial void OnrolesAtHQChanging(long value);
    partial void OnrolesAtHQChanged();
    partial void OnrolesAtOtherChanging(long value);
    partial void OnrolesAtOtherChanged();
    partial void OncorporationDateTimeChanging(long value);
    partial void OncorporationDateTimeChanged();
    partial void OnstartDateTimeChanging(long value);
    partial void OnstartDateTimeChanged();
    partial void OncreateDateTimeChanging(long value);
    partial void OncreateDateTimeChanged();
    partial void OnancestryIDChanging(long value);
    partial void OnancestryIDChanged();
    partial void OncareerIDChanging(long value);
    partial void OncareerIDChanged();
    partial void OnschoolIDChanging(long value);
    partial void OnschoolIDChanged();
    partial void OncareerSpecialityIDChanging(long value);
    partial void OncareerSpecialityIDChanged();
    partial void OngenderChanging(short value);
    partial void OngenderChanged();
    partial void OnaccessoryIDChanging(System.Nullable<long> value);
    partial void OnaccessoryIDChanged();
    partial void OnbeardIDChanging(System.Nullable<long> value);
    partial void OnbeardIDChanged();
    partial void OncostumeIDChanging(long value);
    partial void OncostumeIDChanged();
    partial void OndecoIDChanging(System.Nullable<long> value);
    partial void OndecoIDChanged();
    partial void OneyebrowsIDChanging(long value);
    partial void OneyebrowsIDChanged();
    partial void OneyesIDChanging(long value);
    partial void OneyesIDChanged();
    partial void OnhairIDChanging(long value);
    partial void OnhairIDChanged();
    partial void OnlipstickIDChanging(System.Nullable<long> value);
    partial void OnlipstickIDChanged();
    partial void OnmakeupIDChanging(System.Nullable<long> value);
    partial void OnmakeupIDChanged();
    partial void OnskinIDChanging(long value);
    partial void OnskinIDChanged();
    partial void OnbackgroundIDChanging(long value);
    partial void OnbackgroundIDChanged();
    partial void OnlightIDChanging(long value);
    partial void OnlightIDChanged();
    partial void OnheadRotation1Changing(double value);
    partial void OnheadRotation1Changed();
    partial void OnheadRotation2Changing(double value);
    partial void OnheadRotation2Changed();
    partial void OnheadRotation3Changing(double value);
    partial void OnheadRotation3Changed();
    partial void OneyeRotation1Changing(double value);
    partial void OneyeRotation1Changed();
    partial void OneyeRotation2Changing(double value);
    partial void OneyeRotation2Changed();
    partial void OneyeRotation3Changing(double value);
    partial void OneyeRotation3Changed();
    partial void OncamPos1Changing(double value);
    partial void OncamPos1Changed();
    partial void OncamPos2Changing(double value);
    partial void OncamPos2Changed();
    partial void OncamPos3Changing(double value);
    partial void OncamPos3Changed();
    partial void Onmorph1eChanging(System.Nullable<double> value);
    partial void Onmorph1eChanged();
    partial void Onmorph1nChanging(System.Nullable<double> value);
    partial void Onmorph1nChanged();
    partial void Onmorph1sChanging(System.Nullable<double> value);
    partial void Onmorph1sChanged();
    partial void Onmorph1wChanging(System.Nullable<double> value);
    partial void Onmorph1wChanged();
    partial void Onmorph2eChanging(System.Nullable<double> value);
    partial void Onmorph2eChanged();
    partial void Onmorph2nChanging(System.Nullable<double> value);
    partial void Onmorph2nChanged();
    partial void Onmorph2sChanging(System.Nullable<double> value);
    partial void Onmorph2sChanged();
    partial void Onmorph2wChanging(System.Nullable<double> value);
    partial void Onmorph2wChanged();
    partial void Onmorph3eChanging(System.Nullable<double> value);
    partial void Onmorph3eChanged();
    partial void Onmorph3nChanging(System.Nullable<double> value);
    partial void Onmorph3nChanged();
    partial void Onmorph3sChanging(System.Nullable<double> value);
    partial void Onmorph3sChanged();
    partial void Onmorph3wChanging(System.Nullable<double> value);
    partial void Onmorph3wChanged();
    partial void Onmorph4eChanging(System.Nullable<double> value);
    partial void Onmorph4eChanged();
    partial void Onmorph4nChanging(System.Nullable<double> value);
    partial void Onmorph4nChanged();
    partial void Onmorph4sChanging(System.Nullable<double> value);
    partial void Onmorph4sChanged();
    partial void Onmorph4wChanging(System.Nullable<double> value);
    partial void Onmorph4wChanged();
    partial void OnstationIDChanging(long value);
    partial void OnstationIDChanged();
    partial void OnsolarSystemIDChanging(long value);
    partial void OnsolarSystemIDChanged();
    partial void OnconstellationIDChanging(long value);
    partial void OnconstellationIDChanged();
    partial void OnregionIDChanging(long value);
    partial void OnregionIDChanged();
    partial void OnonlineChanging(short value);
    partial void OnonlineChanged();
    #endregion
		
		public character_()
		{
			this._entity = default(EntityRef<entity>);
			this._account = default(EntityRef<account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_characterID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long characterID
		{
			get
			{
				return this._characterID;
			}
			set
			{
				if ((this._characterID != value))
				{
					if (this._entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncharacterIDChanging(value);
					this.SendPropertyChanging();
					this._characterID = value;
					this.SendPropertyChanged("characterID");
					this.OncharacterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountID", DbType="BigInt")]
		public System.Nullable<long> accountID
		{
			get
			{
				return this._accountID;
			}
			set
			{
				if ((this._accountID != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountIDChanging(value);
					this.SendPropertyChanging();
					this._accountID = value;
					this.SendPropertyChanged("accountID");
					this.OnaccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(85) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bounty", DbType="Float NOT NULL")]
		public double bounty
		{
			get
			{
				return this._bounty;
			}
			set
			{
				if ((this._bounty != value))
				{
					this.OnbountyChanging(value);
					this.SendPropertyChanging();
					this._bounty = value;
					this.SendPropertyChanged("bounty");
					this.OnbountyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Float NOT NULL")]
		public double balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_securityRating", DbType="Float NOT NULL")]
		public double securityRating
		{
			get
			{
				return this._securityRating;
			}
			set
			{
				if ((this._securityRating != value))
				{
					this.OnsecurityRatingChanging(value);
					this.SendPropertyChanging();
					this._securityRating = value;
					this.SendPropertyChanged("securityRating");
					this.OnsecurityRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_petitionMessage", DbType="NVarChar(85) NOT NULL", CanBeNull=false)]
		public string petitionMessage
		{
			get
			{
				return this._petitionMessage;
			}
			set
			{
				if ((this._petitionMessage != value))
				{
					this.OnpetitionMessageChanging(value);
					this.SendPropertyChanging();
					this._petitionMessage = value;
					this.SendPropertyChanged("petitionMessage");
					this.OnpetitionMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logonMinutes", DbType="BigInt NOT NULL")]
		public long logonMinutes
		{
			get
			{
				return this._logonMinutes;
			}
			set
			{
				if ((this._logonMinutes != value))
				{
					this.OnlogonMinutesChanging(value);
					this.SendPropertyChanging();
					this._logonMinutes = value;
					this.SendPropertyChanged("logonMinutes");
					this.OnlogonMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationID", DbType="BigInt NOT NULL")]
		public long corporationID
		{
			get
			{
				return this._corporationID;
			}
			set
			{
				if ((this._corporationID != value))
				{
					this.OncorporationIDChanging(value);
					this.SendPropertyChanging();
					this._corporationID = value;
					this.SendPropertyChanged("corporationID");
					this.OncorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corpRole", DbType="BigInt NOT NULL")]
		public long corpRole
		{
			get
			{
				return this._corpRole;
			}
			set
			{
				if ((this._corpRole != value))
				{
					this.OncorpRoleChanging(value);
					this.SendPropertyChanging();
					this._corpRole = value;
					this.SendPropertyChanged("corpRole");
					this.OncorpRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rolesAtAll", DbType="BigInt NOT NULL")]
		public long rolesAtAll
		{
			get
			{
				return this._rolesAtAll;
			}
			set
			{
				if ((this._rolesAtAll != value))
				{
					this.OnrolesAtAllChanging(value);
					this.SendPropertyChanging();
					this._rolesAtAll = value;
					this.SendPropertyChanged("rolesAtAll");
					this.OnrolesAtAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rolesAtBase", DbType="BigInt NOT NULL")]
		public long rolesAtBase
		{
			get
			{
				return this._rolesAtBase;
			}
			set
			{
				if ((this._rolesAtBase != value))
				{
					this.OnrolesAtBaseChanging(value);
					this.SendPropertyChanging();
					this._rolesAtBase = value;
					this.SendPropertyChanged("rolesAtBase");
					this.OnrolesAtBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rolesAtHQ", DbType="BigInt NOT NULL")]
		public long rolesAtHQ
		{
			get
			{
				return this._rolesAtHQ;
			}
			set
			{
				if ((this._rolesAtHQ != value))
				{
					this.OnrolesAtHQChanging(value);
					this.SendPropertyChanging();
					this._rolesAtHQ = value;
					this.SendPropertyChanged("rolesAtHQ");
					this.OnrolesAtHQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rolesAtOther", DbType="BigInt NOT NULL")]
		public long rolesAtOther
		{
			get
			{
				return this._rolesAtOther;
			}
			set
			{
				if ((this._rolesAtOther != value))
				{
					this.OnrolesAtOtherChanging(value);
					this.SendPropertyChanging();
					this._rolesAtOther = value;
					this.SendPropertyChanged("rolesAtOther");
					this.OnrolesAtOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporationDateTime", DbType="BigInt NOT NULL")]
		public long corporationDateTime
		{
			get
			{
				return this._corporationDateTime;
			}
			set
			{
				if ((this._corporationDateTime != value))
				{
					this.OncorporationDateTimeChanging(value);
					this.SendPropertyChanging();
					this._corporationDateTime = value;
					this.SendPropertyChanged("corporationDateTime");
					this.OncorporationDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDateTime", DbType="BigInt NOT NULL")]
		public long startDateTime
		{
			get
			{
				return this._startDateTime;
			}
			set
			{
				if ((this._startDateTime != value))
				{
					this.OnstartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._startDateTime = value;
					this.SendPropertyChanged("startDateTime");
					this.OnstartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDateTime", DbType="BigInt NOT NULL")]
		public long createDateTime
		{
			get
			{
				return this._createDateTime;
			}
			set
			{
				if ((this._createDateTime != value))
				{
					this.OncreateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._createDateTime = value;
					this.SendPropertyChanged("createDateTime");
					this.OncreateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ancestryID", DbType="BigInt NOT NULL")]
		public long ancestryID
		{
			get
			{
				return this._ancestryID;
			}
			set
			{
				if ((this._ancestryID != value))
				{
					this.OnancestryIDChanging(value);
					this.SendPropertyChanging();
					this._ancestryID = value;
					this.SendPropertyChanged("ancestryID");
					this.OnancestryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_careerID", DbType="BigInt NOT NULL")]
		public long careerID
		{
			get
			{
				return this._careerID;
			}
			set
			{
				if ((this._careerID != value))
				{
					this.OncareerIDChanging(value);
					this.SendPropertyChanging();
					this._careerID = value;
					this.SendPropertyChanged("careerID");
					this.OncareerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolID", DbType="BigInt NOT NULL")]
		public long schoolID
		{
			get
			{
				return this._schoolID;
			}
			set
			{
				if ((this._schoolID != value))
				{
					this.OnschoolIDChanging(value);
					this.SendPropertyChanging();
					this._schoolID = value;
					this.SendPropertyChanged("schoolID");
					this.OnschoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_careerSpecialityID", DbType="BigInt NOT NULL")]
		public long careerSpecialityID
		{
			get
			{
				return this._careerSpecialityID;
			}
			set
			{
				if ((this._careerSpecialityID != value))
				{
					this.OncareerSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._careerSpecialityID = value;
					this.SendPropertyChanged("careerSpecialityID");
					this.OncareerSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="SmallInt NOT NULL")]
		public short gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accessoryID", DbType="BigInt")]
		public System.Nullable<long> accessoryID
		{
			get
			{
				return this._accessoryID;
			}
			set
			{
				if ((this._accessoryID != value))
				{
					this.OnaccessoryIDChanging(value);
					this.SendPropertyChanging();
					this._accessoryID = value;
					this.SendPropertyChanged("accessoryID");
					this.OnaccessoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beardID", DbType="BigInt")]
		public System.Nullable<long> beardID
		{
			get
			{
				return this._beardID;
			}
			set
			{
				if ((this._beardID != value))
				{
					this.OnbeardIDChanging(value);
					this.SendPropertyChanging();
					this._beardID = value;
					this.SendPropertyChanged("beardID");
					this.OnbeardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costumeID", DbType="BigInt NOT NULL")]
		public long costumeID
		{
			get
			{
				return this._costumeID;
			}
			set
			{
				if ((this._costumeID != value))
				{
					this.OncostumeIDChanging(value);
					this.SendPropertyChanging();
					this._costumeID = value;
					this.SendPropertyChanged("costumeID");
					this.OncostumeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decoID", DbType="BigInt")]
		public System.Nullable<long> decoID
		{
			get
			{
				return this._decoID;
			}
			set
			{
				if ((this._decoID != value))
				{
					this.OndecoIDChanging(value);
					this.SendPropertyChanging();
					this._decoID = value;
					this.SendPropertyChanged("decoID");
					this.OndecoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eyebrowsID", DbType="BigInt NOT NULL")]
		public long eyebrowsID
		{
			get
			{
				return this._eyebrowsID;
			}
			set
			{
				if ((this._eyebrowsID != value))
				{
					this.OneyebrowsIDChanging(value);
					this.SendPropertyChanging();
					this._eyebrowsID = value;
					this.SendPropertyChanged("eyebrowsID");
					this.OneyebrowsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eyesID", DbType="BigInt NOT NULL")]
		public long eyesID
		{
			get
			{
				return this._eyesID;
			}
			set
			{
				if ((this._eyesID != value))
				{
					this.OneyesIDChanging(value);
					this.SendPropertyChanging();
					this._eyesID = value;
					this.SendPropertyChanged("eyesID");
					this.OneyesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hairID", DbType="BigInt NOT NULL")]
		public long hairID
		{
			get
			{
				return this._hairID;
			}
			set
			{
				if ((this._hairID != value))
				{
					this.OnhairIDChanging(value);
					this.SendPropertyChanging();
					this._hairID = value;
					this.SendPropertyChanged("hairID");
					this.OnhairIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lipstickID", DbType="BigInt")]
		public System.Nullable<long> lipstickID
		{
			get
			{
				return this._lipstickID;
			}
			set
			{
				if ((this._lipstickID != value))
				{
					this.OnlipstickIDChanging(value);
					this.SendPropertyChanging();
					this._lipstickID = value;
					this.SendPropertyChanged("lipstickID");
					this.OnlipstickIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makeupID", DbType="BigInt")]
		public System.Nullable<long> makeupID
		{
			get
			{
				return this._makeupID;
			}
			set
			{
				if ((this._makeupID != value))
				{
					this.OnmakeupIDChanging(value);
					this.SendPropertyChanging();
					this._makeupID = value;
					this.SendPropertyChanged("makeupID");
					this.OnmakeupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skinID", DbType="BigInt NOT NULL")]
		public long skinID
		{
			get
			{
				return this._skinID;
			}
			set
			{
				if ((this._skinID != value))
				{
					this.OnskinIDChanging(value);
					this.SendPropertyChanging();
					this._skinID = value;
					this.SendPropertyChanged("skinID");
					this.OnskinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_backgroundID", DbType="BigInt NOT NULL")]
		public long backgroundID
		{
			get
			{
				return this._backgroundID;
			}
			set
			{
				if ((this._backgroundID != value))
				{
					this.OnbackgroundIDChanging(value);
					this.SendPropertyChanging();
					this._backgroundID = value;
					this.SendPropertyChanged("backgroundID");
					this.OnbackgroundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lightID", DbType="BigInt NOT NULL")]
		public long lightID
		{
			get
			{
				return this._lightID;
			}
			set
			{
				if ((this._lightID != value))
				{
					this.OnlightIDChanging(value);
					this.SendPropertyChanging();
					this._lightID = value;
					this.SendPropertyChanged("lightID");
					this.OnlightIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_headRotation1", DbType="Float NOT NULL")]
		public double headRotation1
		{
			get
			{
				return this._headRotation1;
			}
			set
			{
				if ((this._headRotation1 != value))
				{
					this.OnheadRotation1Changing(value);
					this.SendPropertyChanging();
					this._headRotation1 = value;
					this.SendPropertyChanged("headRotation1");
					this.OnheadRotation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_headRotation2", DbType="Float NOT NULL")]
		public double headRotation2
		{
			get
			{
				return this._headRotation2;
			}
			set
			{
				if ((this._headRotation2 != value))
				{
					this.OnheadRotation2Changing(value);
					this.SendPropertyChanging();
					this._headRotation2 = value;
					this.SendPropertyChanged("headRotation2");
					this.OnheadRotation2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_headRotation3", DbType="Float NOT NULL")]
		public double headRotation3
		{
			get
			{
				return this._headRotation3;
			}
			set
			{
				if ((this._headRotation3 != value))
				{
					this.OnheadRotation3Changing(value);
					this.SendPropertyChanging();
					this._headRotation3 = value;
					this.SendPropertyChanged("headRotation3");
					this.OnheadRotation3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eyeRotation1", DbType="Float NOT NULL")]
		public double eyeRotation1
		{
			get
			{
				return this._eyeRotation1;
			}
			set
			{
				if ((this._eyeRotation1 != value))
				{
					this.OneyeRotation1Changing(value);
					this.SendPropertyChanging();
					this._eyeRotation1 = value;
					this.SendPropertyChanged("eyeRotation1");
					this.OneyeRotation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eyeRotation2", DbType="Float NOT NULL")]
		public double eyeRotation2
		{
			get
			{
				return this._eyeRotation2;
			}
			set
			{
				if ((this._eyeRotation2 != value))
				{
					this.OneyeRotation2Changing(value);
					this.SendPropertyChanging();
					this._eyeRotation2 = value;
					this.SendPropertyChanged("eyeRotation2");
					this.OneyeRotation2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eyeRotation3", DbType="Float NOT NULL")]
		public double eyeRotation3
		{
			get
			{
				return this._eyeRotation3;
			}
			set
			{
				if ((this._eyeRotation3 != value))
				{
					this.OneyeRotation3Changing(value);
					this.SendPropertyChanging();
					this._eyeRotation3 = value;
					this.SendPropertyChanged("eyeRotation3");
					this.OneyeRotation3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_camPos1", DbType="Float NOT NULL")]
		public double camPos1
		{
			get
			{
				return this._camPos1;
			}
			set
			{
				if ((this._camPos1 != value))
				{
					this.OncamPos1Changing(value);
					this.SendPropertyChanging();
					this._camPos1 = value;
					this.SendPropertyChanged("camPos1");
					this.OncamPos1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_camPos2", DbType="Float NOT NULL")]
		public double camPos2
		{
			get
			{
				return this._camPos2;
			}
			set
			{
				if ((this._camPos2 != value))
				{
					this.OncamPos2Changing(value);
					this.SendPropertyChanging();
					this._camPos2 = value;
					this.SendPropertyChanged("camPos2");
					this.OncamPos2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_camPos3", DbType="Float NOT NULL")]
		public double camPos3
		{
			get
			{
				return this._camPos3;
			}
			set
			{
				if ((this._camPos3 != value))
				{
					this.OncamPos3Changing(value);
					this.SendPropertyChanging();
					this._camPos3 = value;
					this.SendPropertyChanged("camPos3");
					this.OncamPos3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph1e", DbType="Float")]
		public System.Nullable<double> morph1e
		{
			get
			{
				return this._morph1e;
			}
			set
			{
				if ((this._morph1e != value))
				{
					this.Onmorph1eChanging(value);
					this.SendPropertyChanging();
					this._morph1e = value;
					this.SendPropertyChanged("morph1e");
					this.Onmorph1eChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph1n", DbType="Float")]
		public System.Nullable<double> morph1n
		{
			get
			{
				return this._morph1n;
			}
			set
			{
				if ((this._morph1n != value))
				{
					this.Onmorph1nChanging(value);
					this.SendPropertyChanging();
					this._morph1n = value;
					this.SendPropertyChanged("morph1n");
					this.Onmorph1nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph1s", DbType="Float")]
		public System.Nullable<double> morph1s
		{
			get
			{
				return this._morph1s;
			}
			set
			{
				if ((this._morph1s != value))
				{
					this.Onmorph1sChanging(value);
					this.SendPropertyChanging();
					this._morph1s = value;
					this.SendPropertyChanged("morph1s");
					this.Onmorph1sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph1w", DbType="Float")]
		public System.Nullable<double> morph1w
		{
			get
			{
				return this._morph1w;
			}
			set
			{
				if ((this._morph1w != value))
				{
					this.Onmorph1wChanging(value);
					this.SendPropertyChanging();
					this._morph1w = value;
					this.SendPropertyChanged("morph1w");
					this.Onmorph1wChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph2e", DbType="Float")]
		public System.Nullable<double> morph2e
		{
			get
			{
				return this._morph2e;
			}
			set
			{
				if ((this._morph2e != value))
				{
					this.Onmorph2eChanging(value);
					this.SendPropertyChanging();
					this._morph2e = value;
					this.SendPropertyChanged("morph2e");
					this.Onmorph2eChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph2n", DbType="Float")]
		public System.Nullable<double> morph2n
		{
			get
			{
				return this._morph2n;
			}
			set
			{
				if ((this._morph2n != value))
				{
					this.Onmorph2nChanging(value);
					this.SendPropertyChanging();
					this._morph2n = value;
					this.SendPropertyChanged("morph2n");
					this.Onmorph2nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph2s", DbType="Float")]
		public System.Nullable<double> morph2s
		{
			get
			{
				return this._morph2s;
			}
			set
			{
				if ((this._morph2s != value))
				{
					this.Onmorph2sChanging(value);
					this.SendPropertyChanging();
					this._morph2s = value;
					this.SendPropertyChanged("morph2s");
					this.Onmorph2sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph2w", DbType="Float")]
		public System.Nullable<double> morph2w
		{
			get
			{
				return this._morph2w;
			}
			set
			{
				if ((this._morph2w != value))
				{
					this.Onmorph2wChanging(value);
					this.SendPropertyChanging();
					this._morph2w = value;
					this.SendPropertyChanged("morph2w");
					this.Onmorph2wChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph3e", DbType="Float")]
		public System.Nullable<double> morph3e
		{
			get
			{
				return this._morph3e;
			}
			set
			{
				if ((this._morph3e != value))
				{
					this.Onmorph3eChanging(value);
					this.SendPropertyChanging();
					this._morph3e = value;
					this.SendPropertyChanged("morph3e");
					this.Onmorph3eChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph3n", DbType="Float")]
		public System.Nullable<double> morph3n
		{
			get
			{
				return this._morph3n;
			}
			set
			{
				if ((this._morph3n != value))
				{
					this.Onmorph3nChanging(value);
					this.SendPropertyChanging();
					this._morph3n = value;
					this.SendPropertyChanged("morph3n");
					this.Onmorph3nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph3s", DbType="Float")]
		public System.Nullable<double> morph3s
		{
			get
			{
				return this._morph3s;
			}
			set
			{
				if ((this._morph3s != value))
				{
					this.Onmorph3sChanging(value);
					this.SendPropertyChanging();
					this._morph3s = value;
					this.SendPropertyChanged("morph3s");
					this.Onmorph3sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph3w", DbType="Float")]
		public System.Nullable<double> morph3w
		{
			get
			{
				return this._morph3w;
			}
			set
			{
				if ((this._morph3w != value))
				{
					this.Onmorph3wChanging(value);
					this.SendPropertyChanging();
					this._morph3w = value;
					this.SendPropertyChanged("morph3w");
					this.Onmorph3wChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph4e", DbType="Float")]
		public System.Nullable<double> morph4e
		{
			get
			{
				return this._morph4e;
			}
			set
			{
				if ((this._morph4e != value))
				{
					this.Onmorph4eChanging(value);
					this.SendPropertyChanging();
					this._morph4e = value;
					this.SendPropertyChanged("morph4e");
					this.Onmorph4eChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph4n", DbType="Float")]
		public System.Nullable<double> morph4n
		{
			get
			{
				return this._morph4n;
			}
			set
			{
				if ((this._morph4n != value))
				{
					this.Onmorph4nChanging(value);
					this.SendPropertyChanging();
					this._morph4n = value;
					this.SendPropertyChanged("morph4n");
					this.Onmorph4nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph4s", DbType="Float")]
		public System.Nullable<double> morph4s
		{
			get
			{
				return this._morph4s;
			}
			set
			{
				if ((this._morph4s != value))
				{
					this.Onmorph4sChanging(value);
					this.SendPropertyChanging();
					this._morph4s = value;
					this.SendPropertyChanged("morph4s");
					this.Onmorph4sChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morph4w", DbType="Float")]
		public System.Nullable<double> morph4w
		{
			get
			{
				return this._morph4w;
			}
			set
			{
				if ((this._morph4w != value))
				{
					this.Onmorph4wChanging(value);
					this.SendPropertyChanging();
					this._morph4w = value;
					this.SendPropertyChanged("morph4w");
					this.Onmorph4wChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stationID", DbType="BigInt NOT NULL")]
		public long stationID
		{
			get
			{
				return this._stationID;
			}
			set
			{
				if ((this._stationID != value))
				{
					this.OnstationIDChanging(value);
					this.SendPropertyChanging();
					this._stationID = value;
					this.SendPropertyChanged("stationID");
					this.OnstationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solarSystemID", DbType="BigInt NOT NULL")]
		public long solarSystemID
		{
			get
			{
				return this._solarSystemID;
			}
			set
			{
				if ((this._solarSystemID != value))
				{
					this.OnsolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._solarSystemID = value;
					this.SendPropertyChanged("solarSystemID");
					this.OnsolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_constellationID", DbType="BigInt NOT NULL")]
		public long constellationID
		{
			get
			{
				return this._constellationID;
			}
			set
			{
				if ((this._constellationID != value))
				{
					this.OnconstellationIDChanging(value);
					this.SendPropertyChanging();
					this._constellationID = value;
					this.SendPropertyChanged("constellationID");
					this.OnconstellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regionID", DbType="BigInt NOT NULL")]
		public long regionID
		{
			get
			{
				return this._regionID;
			}
			set
			{
				if ((this._regionID != value))
				{
					this.OnregionIDChanging(value);
					this.SendPropertyChanging();
					this._regionID = value;
					this.SendPropertyChanged("regionID");
					this.OnregionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_online", DbType="SmallInt NOT NULL")]
		public short online
		{
			get
			{
				return this._online;
			}
			set
			{
				if ((this._online != value))
				{
					this.OnonlineChanging(value);
					this.SendPropertyChanging();
					this._online = value;
					this.SendPropertyChanged("online");
					this.OnonlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="entity_character_", Storage="_entity", ThisKey="characterID", OtherKey="itemID", IsForeignKey=true)]
		public entity entity
		{
			get
			{
				return this._entity.Entity;
			}
			set
			{
				entity previousValue = this._entity.Entity;
				if (((previousValue != value) 
							|| (this._entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._entity.Entity = null;
						previousValue.character_s.Remove(this);
					}
					this._entity.Entity = value;
					if ((value != null))
					{
						value.character_s.Add(this);
						this._characterID = value.itemID;
					}
					else
					{
						this._characterID = default(long);
					}
					this.SendPropertyChanged("entity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_character_", Storage="_account", ThisKey="accountID", OtherKey="accountID", IsForeignKey=true)]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.character_s.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.character_s.Add(this);
						this._accountID = value.accountID;
					}
					else
					{
						this._accountID = default(Nullable<long>);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cacheinfo")]
	public partial class cacheinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cacheName;
		
		private System.Data.Linq.Binary _cacheData;
		
		private long _cacheTime;
		
		private long _nodeID;
		
		private long _version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncacheNameChanging(string value);
    partial void OncacheNameChanged();
    partial void OncacheDataChanging(System.Data.Linq.Binary value);
    partial void OncacheDataChanged();
    partial void OncacheTimeChanging(long value);
    partial void OncacheTimeChanged();
    partial void OnnodeIDChanging(long value);
    partial void OnnodeIDChanged();
    partial void OnversionChanging(long value);
    partial void OnversionChanged();
    #endregion
		
		public cacheinfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cacheName", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cacheName
		{
			get
			{
				return this._cacheName;
			}
			set
			{
				if ((this._cacheName != value))
				{
					this.OncacheNameChanging(value);
					this.SendPropertyChanging();
					this._cacheName = value;
					this.SendPropertyChanged("cacheName");
					this.OncacheNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cacheData", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary cacheData
		{
			get
			{
				return this._cacheData;
			}
			set
			{
				if ((this._cacheData != value))
				{
					this.OncacheDataChanging(value);
					this.SendPropertyChanging();
					this._cacheData = value;
					this.SendPropertyChanged("cacheData");
					this.OncacheDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cacheTime", DbType="BigInt NOT NULL")]
		public long cacheTime
		{
			get
			{
				return this._cacheTime;
			}
			set
			{
				if ((this._cacheTime != value))
				{
					this.OncacheTimeChanging(value);
					this.SendPropertyChanging();
					this._cacheTime = value;
					this.SendPropertyChanged("cacheTime");
					this.OncacheTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nodeID", DbType="BigInt NOT NULL")]
		public long nodeID
		{
			get
			{
				return this._nodeID;
			}
			set
			{
				if ((this._nodeID != value))
				{
					this.OnnodeIDChanging(value);
					this.SendPropertyChanging();
					this._nodeID = value;
					this.SendPropertyChanged("nodeID");
					this.OnnodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="BigInt NOT NULL")]
		public long version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invtypes")]
	public partial class invtype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _typeID;
		
		private System.Nullable<short> _groupID;
		
		private string _typeName;
		
		private string _description;
		
		private System.Nullable<short> _graphicID;
		
		private System.Nullable<double> _radius;
		
		private System.Nullable<double> _mass;
		
		private System.Nullable<double> _volume;
		
		private System.Nullable<double> _capacity;
		
		private System.Nullable<int> _portionSize;
		
		private System.Nullable<byte> _raceID;
		
		private System.Nullable<double> _basePrice;
		
		private System.Nullable<short> _published;
		
		private System.Nullable<short> _marketGroupID;
		
		private System.Nullable<double> _chanceOfDuplicating;
		
		private EntitySet<entity> _entities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(short value);
    partial void OntypeIDChanged();
    partial void OngroupIDChanging(System.Nullable<short> value);
    partial void OngroupIDChanged();
    partial void OntypeNameChanging(string value);
    partial void OntypeNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OngraphicIDChanging(System.Nullable<short> value);
    partial void OngraphicIDChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    partial void OnmassChanging(System.Nullable<double> value);
    partial void OnmassChanged();
    partial void OnvolumeChanging(System.Nullable<double> value);
    partial void OnvolumeChanged();
    partial void OncapacityChanging(System.Nullable<double> value);
    partial void OncapacityChanged();
    partial void OnportionSizeChanging(System.Nullable<int> value);
    partial void OnportionSizeChanged();
    partial void OnraceIDChanging(System.Nullable<byte> value);
    partial void OnraceIDChanged();
    partial void OnbasePriceChanging(System.Nullable<double> value);
    partial void OnbasePriceChanged();
    partial void OnpublishedChanging(System.Nullable<short> value);
    partial void OnpublishedChanged();
    partial void OnmarketGroupIDChanging(System.Nullable<short> value);
    partial void OnmarketGroupIDChanged();
    partial void OnchanceOfDuplicatingChanging(System.Nullable<double> value);
    partial void OnchanceOfDuplicatingChanged();
    #endregion
		
		public invtype()
		{
			this._entities = new EntitySet<entity>(new Action<entity>(this.attach_entities), new Action<entity>(this.detach_entities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupID", DbType="SmallInt")]
		public System.Nullable<short> groupID
		{
			get
			{
				return this._groupID;
			}
			set
			{
				if ((this._groupID != value))
				{
					this.OngroupIDChanging(value);
					this.SendPropertyChanging();
					this._groupID = value;
					this.SendPropertyChanged("groupID");
					this.OngroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(100)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this.OntypeNameChanging(value);
					this.SendPropertyChanging();
					this._typeName = value;
					this.SendPropertyChanged("typeName");
					this.OntypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(3000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_graphicID", DbType="SmallInt")]
		public System.Nullable<short> graphicID
		{
			get
			{
				return this._graphicID;
			}
			set
			{
				if ((this._graphicID != value))
				{
					this.OngraphicIDChanging(value);
					this.SendPropertyChanging();
					this._graphicID = value;
					this.SendPropertyChanged("graphicID");
					this.OngraphicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mass", DbType="Float")]
		public System.Nullable<double> mass
		{
			get
			{
				return this._mass;
			}
			set
			{
				if ((this._mass != value))
				{
					this.OnmassChanging(value);
					this.SendPropertyChanging();
					this._mass = value;
					this.SendPropertyChanged("mass");
					this.OnmassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_volume", DbType="Float")]
		public System.Nullable<double> volume
		{
			get
			{
				return this._volume;
			}
			set
			{
				if ((this._volume != value))
				{
					this.OnvolumeChanging(value);
					this.SendPropertyChanging();
					this._volume = value;
					this.SendPropertyChanged("volume");
					this.OnvolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacity", DbType="Float")]
		public System.Nullable<double> capacity
		{
			get
			{
				return this._capacity;
			}
			set
			{
				if ((this._capacity != value))
				{
					this.OncapacityChanging(value);
					this.SendPropertyChanging();
					this._capacity = value;
					this.SendPropertyChanged("capacity");
					this.OncapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_portionSize", DbType="Int")]
		public System.Nullable<int> portionSize
		{
			get
			{
				return this._portionSize;
			}
			set
			{
				if ((this._portionSize != value))
				{
					this.OnportionSizeChanging(value);
					this.SendPropertyChanging();
					this._portionSize = value;
					this.SendPropertyChanged("portionSize");
					this.OnportionSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_raceID", DbType="TinyInt")]
		public System.Nullable<byte> raceID
		{
			get
			{
				return this._raceID;
			}
			set
			{
				if ((this._raceID != value))
				{
					this.OnraceIDChanging(value);
					this.SendPropertyChanging();
					this._raceID = value;
					this.SendPropertyChanged("raceID");
					this.OnraceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_basePrice", DbType="Float")]
		public System.Nullable<double> basePrice
		{
			get
			{
				return this._basePrice;
			}
			set
			{
				if ((this._basePrice != value))
				{
					this.OnbasePriceChanging(value);
					this.SendPropertyChanging();
					this._basePrice = value;
					this.SendPropertyChanged("basePrice");
					this.OnbasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="SmallInt")]
		public System.Nullable<short> published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marketGroupID", DbType="SmallInt")]
		public System.Nullable<short> marketGroupID
		{
			get
			{
				return this._marketGroupID;
			}
			set
			{
				if ((this._marketGroupID != value))
				{
					this.OnmarketGroupIDChanging(value);
					this.SendPropertyChanging();
					this._marketGroupID = value;
					this.SendPropertyChanged("marketGroupID");
					this.OnmarketGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chanceOfDuplicating", DbType="Float")]
		public System.Nullable<double> chanceOfDuplicating
		{
			get
			{
				return this._chanceOfDuplicating;
			}
			set
			{
				if ((this._chanceOfDuplicating != value))
				{
					this.OnchanceOfDuplicatingChanging(value);
					this.SendPropertyChanging();
					this._chanceOfDuplicating = value;
					this.SendPropertyChanged("chanceOfDuplicating");
					this.OnchanceOfDuplicatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invtype_entity", Storage="_entities", ThisKey="typeID", OtherKey="typeID")]
		public EntitySet<entity> entities
		{
			get
			{
				return this._entities;
			}
			set
			{
				this._entities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_entities(entity entity)
		{
			this.SendPropertyChanging();
			entity.invtype = this;
		}
		
		private void detach_entities(entity entity)
		{
			this.SendPropertyChanging();
			entity.invtype = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity")]
	public partial class entity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _itemID;
		
		private string _itemName;
		
		private short _typeID;
		
		private long _ownerID;
		
		private long _locationID;
		
		private long _flag;
		
		private long _contraband;
		
		private long _singleton;
		
		private long _quantity;
		
		private double _x;
		
		private double _y;
		
		private double _z;
		
		private string _customInfo;
		
		private short _nodeID;
		
		private EntitySet<character_> _character_s;
		
		private EntitySet<solarsystemsloaded> _solarsystemsloadeds;
		
		private EntityRef<invtype> _invtype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIDChanging(long value);
    partial void OnitemIDChanged();
    partial void OnitemNameChanging(string value);
    partial void OnitemNameChanged();
    partial void OntypeIDChanging(short value);
    partial void OntypeIDChanged();
    partial void OnownerIDChanging(long value);
    partial void OnownerIDChanged();
    partial void OnlocationIDChanging(long value);
    partial void OnlocationIDChanged();
    partial void OnflagChanging(long value);
    partial void OnflagChanged();
    partial void OncontrabandChanging(long value);
    partial void OncontrabandChanged();
    partial void OnsingletonChanging(long value);
    partial void OnsingletonChanged();
    partial void OnquantityChanging(long value);
    partial void OnquantityChanged();
    partial void OnxChanging(double value);
    partial void OnxChanged();
    partial void OnyChanging(double value);
    partial void OnyChanged();
    partial void OnzChanging(double value);
    partial void OnzChanged();
    partial void OncustomInfoChanging(string value);
    partial void OncustomInfoChanged();
    partial void OnnodeIDChanging(short value);
    partial void OnnodeIDChanged();
    #endregion
		
		public entity()
		{
			this._character_s = new EntitySet<character_>(new Action<character_>(this.attach_character_s), new Action<character_>(this.detach_character_s));
			this._solarsystemsloadeds = new EntitySet<solarsystemsloaded>(new Action<solarsystemsloaded>(this.attach_solarsystemsloadeds), new Action<solarsystemsloaded>(this.detach_solarsystemsloadeds));
			this._invtype = default(EntityRef<invtype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long itemID
		{
			get
			{
				return this._itemID;
			}
			set
			{
				if ((this._itemID != value))
				{
					this.OnitemIDChanging(value);
					this.SendPropertyChanging();
					this._itemID = value;
					this.SendPropertyChanged("itemID");
					this.OnitemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemName", DbType="NVarChar(85) NOT NULL", CanBeNull=false)]
		public string itemName
		{
			get
			{
				return this._itemName;
			}
			set
			{
				if ((this._itemName != value))
				{
					this.OnitemNameChanging(value);
					this.SendPropertyChanging();
					this._itemName = value;
					this.SendPropertyChanged("itemName");
					this.OnitemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="SmallInt NOT NULL")]
		public short typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					if (this._invtype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownerID", DbType="BigInt NOT NULL")]
		public long ownerID
		{
			get
			{
				return this._ownerID;
			}
			set
			{
				if ((this._ownerID != value))
				{
					this.OnownerIDChanging(value);
					this.SendPropertyChanging();
					this._ownerID = value;
					this.SendPropertyChanged("ownerID");
					this.OnownerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", DbType="BigInt NOT NULL")]
		public long locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag", DbType="BigInt NOT NULL")]
		public long flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if ((this._flag != value))
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contraband", DbType="BigInt NOT NULL")]
		public long contraband
		{
			get
			{
				return this._contraband;
			}
			set
			{
				if ((this._contraband != value))
				{
					this.OncontrabandChanging(value);
					this.SendPropertyChanging();
					this._contraband = value;
					this.SendPropertyChanged("contraband");
					this.OncontrabandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_singleton", DbType="BigInt NOT NULL")]
		public long singleton
		{
			get
			{
				return this._singleton;
			}
			set
			{
				if ((this._singleton != value))
				{
					this.OnsingletonChanging(value);
					this.SendPropertyChanging();
					this._singleton = value;
					this.SendPropertyChanged("singleton");
					this.OnsingletonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="BigInt NOT NULL")]
		public long quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Float NOT NULL")]
		public double x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Float NOT NULL")]
		public double y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="Float NOT NULL")]
		public double z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customInfo", DbType="NVarChar(MAX)")]
		public string customInfo
		{
			get
			{
				return this._customInfo;
			}
			set
			{
				if ((this._customInfo != value))
				{
					this.OncustomInfoChanging(value);
					this.SendPropertyChanging();
					this._customInfo = value;
					this.SendPropertyChanged("customInfo");
					this.OncustomInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nodeID")]
		public short nodeID
		{
			get
			{
				return this._nodeID;
			}
			set
			{
				if ((this._nodeID != value))
				{
					this.OnnodeIDChanging(value);
					this.SendPropertyChanging();
					this._nodeID = value;
					this.SendPropertyChanged("nodeID");
					this.OnnodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="entity_character_", Storage="_character_s", ThisKey="itemID", OtherKey="characterID")]
		public EntitySet<character_> character_s
		{
			get
			{
				return this._character_s;
			}
			set
			{
				this._character_s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="entity_solarsystemsloaded", Storage="_solarsystemsloadeds", ThisKey="itemID", OtherKey="solarSystemID")]
		public EntitySet<solarsystemsloaded> solarsystemsloadeds
		{
			get
			{
				return this._solarsystemsloadeds;
			}
			set
			{
				this._solarsystemsloadeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invtype_entity", Storage="_invtype", ThisKey="typeID", OtherKey="typeID", IsForeignKey=true)]
		public invtype invtype
		{
			get
			{
				return this._invtype.Entity;
			}
			set
			{
				invtype previousValue = this._invtype.Entity;
				if (((previousValue != value) 
							|| (this._invtype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._invtype.Entity = null;
						previousValue.entities.Remove(this);
					}
					this._invtype.Entity = value;
					if ((value != null))
					{
						value.entities.Add(this);
						this._typeID = value.typeID;
					}
					else
					{
						this._typeID = default(short);
					}
					this.SendPropertyChanged("invtype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_character_s(character_ entity)
		{
			this.SendPropertyChanging();
			entity.entity = this;
		}
		
		private void detach_character_s(character_ entity)
		{
			this.SendPropertyChanging();
			entity.entity = null;
		}
		
		private void attach_solarsystemsloadeds(solarsystemsloaded entity)
		{
			this.SendPropertyChanging();
			entity.entity = this;
		}
		
		private void detach_solarsystemsloadeds(solarsystemsloaded entity)
		{
			this.SendPropertyChanging();
			entity.entity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.solarsystemsloaded")]
	public partial class solarsystemsloaded : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _solarSystemID;
		
		private int _nodeID;
		
		private EntityRef<entity> _entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsolarSystemIDChanging(long value);
    partial void OnsolarSystemIDChanged();
    partial void OnnodeIDChanging(int value);
    partial void OnnodeIDChanged();
    #endregion
		
		public solarsystemsloaded()
		{
			this._entity = default(EntityRef<entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solarSystemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public long solarSystemID
		{
			get
			{
				return this._solarSystemID;
			}
			set
			{
				if ((this._solarSystemID != value))
				{
					if (this._entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsolarSystemIDChanging(value);
					this.SendPropertyChanging();
					this._solarSystemID = value;
					this.SendPropertyChanged("solarSystemID");
					this.OnsolarSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nodeID", DbType="Int NOT NULL")]
		public int nodeID
		{
			get
			{
				return this._nodeID;
			}
			set
			{
				if ((this._nodeID != value))
				{
					this.OnnodeIDChanging(value);
					this.SendPropertyChanging();
					this._nodeID = value;
					this.SendPropertyChanged("nodeID");
					this.OnnodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="entity_solarsystemsloaded", Storage="_entity", ThisKey="solarSystemID", OtherKey="itemID", IsForeignKey=true)]
		public entity entity
		{
			get
			{
				return this._entity.Entity;
			}
			set
			{
				entity previousValue = this._entity.Entity;
				if (((previousValue != value) 
							|| (this._entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._entity.Entity = null;
						previousValue.solarsystemsloadeds.Remove(this);
					}
					this._entity.Entity = value;
					if ((value != null))
					{
						value.solarsystemsloadeds.Add(this);
						this._solarSystemID = value.itemID;
					}
					else
					{
						this._solarSystemID = default(long);
					}
					this.SendPropertyChanged("entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _accountID;
		
		private string _accountName;
		
		private System.Data.Linq.Binary _password;
		
		private long _role;
		
		private short _online;
		
		private bool _banned;
		
		private EntitySet<character_> _character_s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaccountIDChanging(long value);
    partial void OnaccountIDChanged();
    partial void OnaccountNameChanging(string value);
    partial void OnaccountNameChanged();
    partial void OnpasswordChanging(System.Data.Linq.Binary value);
    partial void OnpasswordChanged();
    partial void OnroleChanging(long value);
    partial void OnroleChanged();
    partial void OnonlineChanging(short value);
    partial void OnonlineChanged();
    partial void OnbannedChanging(bool value);
    partial void OnbannedChanged();
    #endregion
		
		public account()
		{
			this._character_s = new EntitySet<character_>(new Action<character_>(this.attach_character_s), new Action<character_>(this.detach_character_s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long accountID
		{
			get
			{
				return this._accountID;
			}
			set
			{
				if ((this._accountID != value))
				{
					this.OnaccountIDChanging(value);
					this.SendPropertyChanging();
					this._accountID = value;
					this.SendPropertyChanged("accountID");
					this.OnaccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountName", DbType="NVarChar(48) NOT NULL", CanBeNull=false)]
		public string accountName
		{
			get
			{
				return this._accountName;
			}
			set
			{
				if ((this._accountName != value))
				{
					this.OnaccountNameChanging(value);
					this.SendPropertyChanging();
					this._accountName = value;
					this.SendPropertyChanged("accountName");
					this.OnaccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="BigInt NOT NULL")]
		public long role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_online", DbType="SmallInt NOT NULL")]
		public short online
		{
			get
			{
				return this._online;
			}
			set
			{
				if ((this._online != value))
				{
					this.OnonlineChanging(value);
					this.SendPropertyChanging();
					this._online = value;
					this.SendPropertyChanged("online");
					this.OnonlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_banned", DbType="Bit NOT NULL")]
		public bool banned
		{
			get
			{
				return this._banned;
			}
			set
			{
				if ((this._banned != value))
				{
					this.OnbannedChanging(value);
					this.SendPropertyChanging();
					this._banned = value;
					this.SendPropertyChanged("banned");
					this.OnbannedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_character_", Storage="_character_s", ThisKey="accountID", OtherKey="accountID")]
		public EntitySet<character_> character_s
		{
			get
			{
				return this._character_s;
			}
			set
			{
				this._character_s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_character_s(character_ entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_character_s(character_ entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
	}
}
#pragma warning restore 1591
